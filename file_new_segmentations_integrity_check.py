import argparse
import os
import h5py
import pandas as pd
import tqdm
import pydicom

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--folder", type=str, default="total_segmentator_results", help="Folder containing the segemntation files generated by TotalSegmentator")
    args = parser.parse_args()
    folder = args.folder

    patient_id_table = pd.read_csv("data/train_series_meta.csv", index_col=1)

    for file in tqdm.tqdm(os.listdir(folder)):
        series_id = file[:-5]
        file_path = os.path.join(folder, file)
        try:
            with h5py.File(file_path, "r") as f:
                segmentation_labels = f["segmentation_labels"][()]
        except OSError:
            print("File {} is corrupted".format(file))
            continue

        patient_id = patient_id_table.loc[int(series_id), "patient_id"]
        series_folder = os.path.join("data", "train_images", str(patient_id), series_id)
        correct_depth = len(os.listdir(series_folder))

        dcm_file = pydicom.dcmread(os.path.join(series_folder, os.listdir(series_folder)[0]))
        shape = dcm_file.pixel_array.shape
        correct_height = shape[0]
        correct_width = shape[1]

        assert segmentation_labels.shape[2] == correct_depth, "Segmentation and image have different depths. Shape: {} {}".format(segmentation_labels.shape, correct_depth)
        assert segmentation_labels.shape[1] == correct_height, "Segmentation and image have different heights. Shape: {} {}".format(segmentation_labels.shape, correct_height)
        assert segmentation_labels.shape[0] == correct_width, "Segmentation and image have different widths. Shape: {} {}".format(segmentation_labels.shape, correct_width)

